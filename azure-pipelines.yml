# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*MasternodeSetupTool.sln'
  toolProject: '**/*MasternodeSetupTool.csproj'
  minerProject: '**/*Stratis.CirrusMinerD/Stratis.CirrusMinerD.csproj'
  installerProject: '**/*MasternodeSetupToolInstaller.vdproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  devCmd: 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\devenv.com'
  disableToolPath: 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\CommonExtensions\Microsoft\VSI\DisableOutOfProcBuild'

steps:
- checkout: self
  submodules: 'recursive'

- task: NuGetToolInstaller@1

# - task: NuGetCommand@2
#   enabled: false
#   inputs:
#     restoreSolution: '$(solution)'

# - task: NuGetCommand@2
#   inputs:
#     command: 'custom'
#     arguments: 'restore "$(solution)" -p:RestoreUseSkipNonexistentTargets=false'
    
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '"$(minerProject)"'
    restoreNugetPackages: true

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '"$(toolProject)"'
    restoreNugetPackages: true

# https://github.com/it3xl/MSBuild-DevEnv-Build-Server-Workarounds/issues/1#issuecomment-525435637
- task: BatchScript@1
  displayName: Enable .vdproj Builds
  inputs:
    filename: '"$(disableToolPath)\DisableOutOfProcBuild.exe"'
    workingFolder: '"$(disableToolPath)"'

- script: '"$(devCmd)" "$(solution)" /Build "$(buildConfiguration)" /Project "$(installerProject)"'
  displayName: Build Installer