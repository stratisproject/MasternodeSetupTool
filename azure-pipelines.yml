# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '$(System.DefaultWorkingDirectory)/src/MasternodeSetupTool.sln'
  toolProjectPath: '$(System.DefaultWorkingDirectory)/src/MasternodeSetupTool'
  minerProjectPath: '$(System.DefaultWorkingDirectory)/StratisFullNode/src/Stratis.CirrusMinerD'
  installerProjectPath: '$(System.DefaultWorkingDirectory)/src/MasternodeSetupToolInstaller'
  installerProject: '$(installerProjectPath)/MasternodeSetupToolInstaller.vdproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  devCmd: 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\devenv.com'
  disableToolPath: 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\CommonExtensions\Microsoft\VSI\DisableOutOfProcBuild'
  majorVersion: '1'
  minorVersion: '0'
  fullVersion: '$(majorVersion).$(minorVersion).$(Build.BuildId)'

steps:
- checkout: self
  submodules: 'recursive'

- task: NuGetToolInstaller@1

- task: Bash@3
  displayName: Build CirrusMinerD
  inputs:
    targetType: 'inline'
    script: |
      cd "$(minerProjectPath)"
      dotnet build

- task: CmdLine@2
  inputs:
    script: 'set InformationalVersion="$(fullVersion)"'

- task: Bash@3
  displayName: Build Masternode Setup Tool
  inputs:
    targetType: 'inline'
    script: |
      cd "$(toolProjectPath)"
      dotnet build /property:InformationalVersion=$(fullVersion)

# https://github.com/it3xl/MSBuild-DevEnv-Build-Server-Workarounds/issues/1#issuecomment-525435637
- task: BatchScript@1
  displayName: Enable .vdproj Builds
  inputs:
    filename: '"$(disableToolPath)\DisableOutOfProcBuild.exe"'
    workingFolder: '"$(disableToolPath)"'

- script: '"$(devCmd)" "$(solution)" /Build "$(buildConfiguration)" /Project "$(installerProject)"'
  displayName: Build Installer

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(installerProjectPath)/$(buildConfiguration)/*.msi'
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/MasternodeSetupTool-$(fullVersion).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'