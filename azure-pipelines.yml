# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '$(System.DefaultWorkingDirectory)\src\MasternodeSetupTool.sln'
  toolProjectPath: '$(System.DefaultWorkingDirectory)\src\MasternodeSetupTool'
  minerProjectPath: '$(System.DefaultWorkingDirectory)\StratisFullNode\src\Stratis.CirrusMinerD'
  installerProjectPath: '$(System.DefaultWorkingDirectory)\src\MasternodeSetupToolInstaller'
  installerProject: '$(installerProjectPath)\MasternodeSetupToolInstaller.vdproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  devCmd: 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\devenv.com'
  disableToolPath: 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\CommonExtensions\Microsoft\VSI\DisableOutOfProcBuild'

steps:

- task: PowerShell@2
  displayName: Create Version Number
  inputs:
    targetType: 'inline'
    script: |
      $bv = "$env:MajorVersion.$env:MinorVersion.$env:PatchVersion"
      Write-Host "##vso[task.setvariable variable=buildVersion]$bv"
      Write-Host "Version of .NET app : $bv"

- checkout: self
  submodules: 'recursive'

- task: NuGetToolInstaller@1

- task: Bash@3
  displayName: Build CirrusMinerD
  inputs:
    targetType: 'inline'
    script: |
      cd "$(minerProjectPath)"
      dotnet build

- task: Bash@3
  displayName: Build Masternode Setup Tool
  inputs:
    targetType: 'inline'
    script: |
      cd "$(toolProjectPath)"
      dotnet build

# https://github.com/it3xl/MSBuild-DevEnv-Build-Server-Workarounds/issues/1#issuecomment-525435637
- task: BatchScript@1
  displayName: Enable .vdproj Builds
  inputs:
    filename: '"$(disableToolPath)\DisableOutOfProcBuild.exe"'
    workingFolder: '"$(disableToolPath)"'

- task: Bash@3
  displayName: Update ProductVersion
  inputs:
    targetType: 'inline'
    script: 'sed -i ''s/"ProductVersion" = "8:1.0.0"/"ProductVersion" = "8:$(buildVersion)"/'' src/MasternodeSetupToolInstaller/MasternodeSetupToolInstaller.vdproj'

- task: PowerShell@2
  displayName: Update ProductRevision
  inputs:
    targetType: 'inline'
    script: |
      # Replace UUID in a specified file
      
      $filePath = "src/MasternodeSetupToolInstaller/MasternodeSetupToolInstaller.vdproj"
      
      # Check if the file exists
      if (-not (Test-Path $filePath)) {
          Write-Error "File not found: $filePath"
          exit 1
      }
      
      # Generate a new UUID
      $newUUID = [guid]::NewGuid().ToString()
      
      # Read the file content
      $content = Get-Content $filePath -Raw
      
      # Replace the UUID in the "ProductRevision" string
      $updatedContent = $content -replace '(?<=ProductRevision" = "8:{)(^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$)', $newUUID
      
      # Save the updated content back to the file
      $updatedContent | Set-Content $filePath
      
      Write-Output "UUID replaced successfully!"

- script: '"$(devCmd)" "$(solution)" /Build "$(buildConfiguration)" /Project "$(installerProject)"'
  displayName: Build Installer

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(installerProjectPath)\$(buildConfiguration)\*.msi'
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/MasternodeSetupTool-$(buildVersion).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'